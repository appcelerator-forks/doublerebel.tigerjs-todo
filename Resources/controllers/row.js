// Generated by CoffeeScript 1.6.2
(function() {
  var Row, Tiger,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Tiger = require('/lib/tiger');

  Row = (function(_super) {
    __extends(Row, _super);

    Row.prototype.logPrefix = '(Todo:Row)';

    Row.prototype.toggleStatus = function() {
      this.store.done = !this.store.done;
      this.store.date_completed = (new Date).getTime();
      return this.store.save();
    };

    Row.prototype.deleteTask = function(e) {
      e.cancelBubble = true;
      return this.store.destroy();
    };

    Row.prototype.events = {
      'click check': 'toggleStatus',
      'click remove': 'deleteTask'
    };

    function Row(id) {
      this.id = id;
      this.debug('Creating...');
      this.Store = require('/models/todo');
      this.View = require('/views/row');
      this.store = this.Store.find(this.id);
      this.view = new this.View({
        itemText: "[" + this.store.item + "]"
      });
      Row.__super__.constructor.apply(this, arguments);
      this.view.displayTaskStatus(this.store);
    }

    return Row;

  })(Tiger.Controller);

  module.exports = Row;

}).call(this);

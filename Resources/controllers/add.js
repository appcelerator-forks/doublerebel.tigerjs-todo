// Generated by CoffeeScript 1.6.2
(function() {
  var Add, Tiger,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Tiger = require('/lib/tiger');

  Add = (function(_super) {
    __extends(Add, _super);

    Add.prototype.logPrefix = '(Todo:Add)';

    Add.prototype.elements = ['itemField'];

    Add.prototype.addItem = function() {
      var item;

      item = new this.Store({
        item: this.itemField.get('value'),
        done: false
      });
      item.save();
      return this.close();
    };

    Add.prototype.closeKeyboard = function(e) {
      return e.source.blur();
    };

    Add.prototype.focusTextField = function() {
      return this.itemField.focus();
    };

    Add.prototype.events = {
      'click addButton': 'addItem',
      'click cancelButton': 'close',
      'return itemField': 'closeKeyboard',
      'open': 'focusTextField'
    };

    function Add(Store) {
      this.Store = Store;
      this.debug('Creating...');
      this.View = require('/views/add');
      this.view = new this.View;
      Add.__super__.constructor.apply(this, arguments);
    }

    Add.prototype.render = function() {
      return this.view.open();
    };

    Add.prototype.close = function() {
      return this.view.close();
    };

    return Add;

  })(Tiger.Controller);

  module.exports = Add;

}).call(this);

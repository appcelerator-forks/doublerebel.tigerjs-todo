// Generated by CoffeeScript 1.6.2
(function() {
  var AddButton, Divider, Header, Tiger, Widgets, dip, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Tiger = require('/lib/tiger');

  dip = function(val) {
    return "" + val + " dip";
  };

  Tiger.Window.prototype.defaults = {
    backgroundColor: '#fff'
  };

  Tiger.Label.prototype.defaults = {
    color: '#000'
  };

  Divider = (function(_super) {
    __extends(Divider, _super);

    function Divider() {
      _ref = Divider.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Divider.prototype.defaults = {
      height: dip(48),
      width: dip(3),
      top: dip(1),
      right: dip(50),
      backgroundGradient: {
        type: "linear",
        startPoint: {
          x: "0%",
          y: "0%"
        },
        endPoint: {
          x: "100%",
          y: "0%"
        },
        colors: [
          {
            color: "#666",
            offset: 0.0
          }, {
            color: "#ccc",
            offset: 0.5
          }, {
            color: "#666",
            offset: 1.0
          }
        ]
      }
    };

    return Divider;

  })(Tiger.View);

  Header = (function(_super) {
    __extends(Header, _super);

    Header.prototype.defaults = {
      top: 0,
      height: dip(50),
      width: Ti.UI.FILL,
      backgroundGradient: {
        type: "linear",
        startPoint: {
          x: "0%",
          y: "0%"
        },
        endPoint: {
          x: "0%",
          y: "100%"
        },
        colors: [
          {
            color: "#a00",
            offset: 0.0
          }, {
            color: "#800",
            offset: 1.0
          }
        ]
      }
    };

    function Header() {
      this.title = new Tiger.Label({
        left: dip(10),
        color: "#fff",
        font: {
          fontSize: dip(24),
          fontWeight: 'bold'
        }
      });
      this.divider = new Divider;
      this.addView = new Tiger.View({
        top: 0,
        bottom: 0,
        right: 0,
        width: dip(50)
      });
      this.addImage = new Tiger.ImageView({
        height: Ti.UI.FILL,
        width: Ti.UI.FILL,
        color: "#fff",
        backgroundColor: "transparent",
        image: "/images/ic_menu_add.png",
        touchEnabled: false
      });
      this.addView.add(this.addImage);
      Header.__super__.constructor.apply(this, arguments);
      this.add(this.title).add(this.divider).add(this.addView);
    }

    return Header;

  })(Tiger.View);

  AddButton = (function(_super) {
    __extends(AddButton, _super);

    function AddButton() {
      _ref1 = AddButton.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    AddButton.prototype.width = '50%';

    AddButton.prototype.top = dip(20);

    return AddButton;

  })(Tiger.Button);

  Widgets = {
    dip: dip,
    Divider: Divider,
    Header: Header,
    AddButton: AddButton
  };

  module.exports = Widgets;

}).call(this);
